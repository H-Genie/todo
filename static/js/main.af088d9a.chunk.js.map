{"version":3,"sources":["modules/firebase.js","styled/Globalstyle.js","styled/LogButton.js","Components/SignIn.js","Components/LogOut.js","Components/Navigator.js","Components/EditTodos.js","Components/SetTodo.js","Components/SetTodoNull.js","Components/Todos.js","Components/TodosContainer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","db","firestore","auth","GlobalStyle","createGlobalStyle","LogButton","styled","button","SignIn","signInWithGoogle","a","provider","GoogleAuthProvider","signInWithPopup","onClick","style","marginRight","width","height","LogOut","logOut","Nav","nav","LogMessage","p","Navigator","user","email","React","memo","List","li","TextContainer","div","Text","span","EditTodos","useState","todos","setTodos","uid","String","useEffect","collection","where","orderBy","get","then","querySnapshot","data","forEach","doc","push","handles","animation","dataSource","onUpdate","length","document","querySelector","firstElementChild","childElementCount","parent","getElementsByClassName","i","lastElementChild","id","update","dataId","row","todo","checked","color","className","text","Form","form","Input","input","Button","SetTodo","onSubmit","e","preventDefault","target","value","Date","now","todoObj","set","alert","type","placeholder","SetTodoNull","readOnly","Icons","Todos","onSnapshot","snapshot","docs","map","toggle","getElementById","classList","remove","add","overflow","contains","updatedText","prompt","updateTodo","window","confirm","delete","deleteTodo","Main","main","ButtonContainer","EditButton","label","TodosContainer","alignTodos","setAlignTodos","prev","Title","h1","Container","section","App","setUser","init","setInint","onAuthStateChanged","signOut","ReactDOM","render"],"mappings":"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","file":"static/js/main.af088d9a.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIB_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const db = firebase.firestore();\nexport const auth = firebase.auth();","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n\n    ul {\n        padding : 0;\n        margin : 0;\n    }\n\n    @font-face {\n        font-family: 'GmarketSansBold';\n        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansBold.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    @font-face {\n        font-family: 'GmarketSansMedium';\n        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    @font-face {\n        font-family: 'GmarketSansLight';\n        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansLight.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n    }\n\n    body {\n        font-family : GmarketSansMedium;\n        background-color : #f2f3f7;\n    }\n`;\n\nexport default GlobalStyle;","import styled from 'styled-components';\n\nexport const LogButton = styled.button`\n    min-width : 86px;\n    height : 40px;\n    display : flex;\n    align-items : center;\n    padding : 8px;\n    background-color : #f2f3f7;\n    box-shadow : -6px -6px 8px rgba(255, 255, 255, 0.9), 5px 5px 8px rgba(0, 0, 0, 0.07);\n    border : none;\n    border-radius : 8px;\n    font-family : GmarketSansMedium;\n    font-size: 10px;\n`;","import { auth, firebaseInstance } from '../modules/firebase';\nimport { FcGoogle } from \"react-icons/fc\";\nimport { LogButton } from '../styled/LogButton';\n\n\nconst SignIn = () => {\n    const signInWithGoogle = async () => {\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        await auth.signInWithPopup(provider);\n    };\n\n    return (\n        <LogButton onClick={signInWithGoogle}>\n            <FcGoogle style={{ marginRight: '5px', width: '20px', height: '20px' }} />\n            <span>Sign In</span>\n        </LogButton>\n    )\n}\n\nexport default SignIn;","import { GrLogout } from 'react-icons/gr';\nimport { LogButton } from '../styled/LogButton';\n\nconst LogOut = ({ logOut }) => {\n    return (\n        <LogButton onClick={logOut}>\n            <GrLogout style={{ marginRight: '5px', width: '20px', height: '20px' }} />\n            <span>Log Out</span>\n        </LogButton>\n    )\n}\n\nexport default LogOut;","import React from 'react';\nimport styled from 'styled-components';\nimport SignIn from './SignIn';\nimport LogOut from './LogOut';\n\nconst Nav = styled.nav`\n    width : calc(100% - 32px);\n    height : 40px;\n    display : flex;\n    justify-content : space-between;\n    align-items : center;\n    margin : 24px auto;\n`;\n\nconst LogMessage = styled.p`\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-family : GmarketSansLight;\n`;\n\nconst Navigator = ({ user, logOut }) => {\n    return (\n        <>\n            {\n                user === null ? (\n                    <Nav>\n                        <LogMessage>로그인 해주세요</LogMessage>\n                        <SignIn />\n                    </Nav>\n                ) : (\n                    <Nav>\n                        <LogMessage>{user.email}</LogMessage>\n                        <LogOut logOut={logOut} />\n                    </Nav>\n                )\n            }\n        </>\n    )\n}\n\nexport default React.memo(Navigator);","import React, { useState, useEffect } from \"react\";\nimport { db } from '../modules/firebase';\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from 'react-icons/md';\nimport styled from 'styled-components';\nimport ReactDragList from 'react-drag-list';\n\nconst List = styled.li`\n    width : 100%;\n    display : flex;\n    justify-content : space-between;\n    border-radius : 16px;\n    padding : 16px;\n    margin : 32px 0;\n    background-color : #f2f3f7;\n    box-shadow : -6px -6px 8px rgba(255, 255, 255, 0.9), 5px 5px 8px rgba(0, 0, 0, 0.07);\n`;\n\nconst TextContainer = styled.div`\n    width: calc(100% - 32px);\n    display : flex;\n    align-items : center;\n\n    & svg {\n        min-width : 20px;\n        height : 20px;\n        margin-right : 10px;\n    }\n`;\n\nconst Text = styled.span`\n    &.overflow {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    &.checked {\n        color: #abb5bd;\n        text-decoration: line-through;\n        transition : all 0.25s linear;\n    }\n`;\n\nconst EditTodos = ({ user }) => {\n    const [todos, setTodos] = useState([]);\n    const uid = user ? String(user.uid) : null;\n\n    useEffect(() => {\n        db.collection(\"todos\").where(\"uid\", \"==\", uid).orderBy(\"dataId\").get().then(querySnapshot => {\n            let data = []\n            querySnapshot.forEach(doc => {\n                data.push(doc.data());\n            })\n            setTodos(data);\n        })\n    }, [uid])\n\n    const setId = () => {\n        const length = document.querySelector('.rc-draggable-list').firstElementChild.childElementCount;\n        const parent = document.getElementsByClassName('rc-draggable-list-draggableRow');\n\n        for (let i = 0; i < length; i++) {\n            db.doc(`todos/${parent[i].lastElementChild.firstElementChild.firstElementChild.lastElementChild.id}`).update({ dataId: i });\n        }\n    }\n\n    return (\n        <ReactDragList\n            handles={false}\n            animation={0}\n            dataSource={todos}\n            onUpdate={setId}\n            row={todo =>\n                <ul style={{ width: '100%' }}>\n                    <List key={todo.id}>\n                        <TextContainer>\n                            {todo.checked ?\n                                <MdCheckBox\n                                    style={{ color: 'rgba(6, 124, 248, 0.7)' }}\n                                /> :\n                                <MdCheckBoxOutlineBlank\n                                />\n                            }\n                            {todo.checked ?\n                                <Text\n                                    id={`${todo.uid}${todo.id}`}\n                                    className=\"checked overflow\"\n                                >\n                                    {todo.text}\n                                </Text> :\n                                <Text\n                                    id={`${todo.uid}${todo.id}`}\n                                    className=\"overflow\"\n                                >\n                                    {todo.text}\n                                </Text>\n                            }\n                        </TextContainer>\n                    </List>\n                </ul>\n            }\n        />\n    )\n}\n\nexport default EditTodos;","import React from 'react';\r\nimport { db } from '../modules/firebase';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n    display : flex;\r\n    margin-bottom : 16px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width : calc(100% - 40px);\r\n    height : 50px;\r\n    padding : 16px;\r\n    border : none;\r\n    box-shadow : inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\r\n    border-top-left-radius : 10px;\r\n    border-bottom-left-radius : 10px;\r\n    outline : none;\r\n    font-family : GmarketSansLight;\r\n    font-size : 16px;    \r\n`;\r\n\r\nconst Button = styled.button`\r\n    width : 50px;\r\n    height : 50px;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    background-color : #067CF8;\r\n    border-top-right-radius : 10px;\r\n    border-bottom-right-radius : 10px;\r\n    border : none;\r\n    font-size : 32px;\r\n    color : #f2f3f7;\r\n\r\n    &:hover {\r\n        opacity : 0.7;\r\n        transition : opacity 0.25s linear;\r\n    }\r\n`;\r\n\r\nconst SetTodo = ({ user }) => {\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (e.target[0].value === \"\") {\r\n            alert(\"모든 정보를 다 입력해주세요\");\r\n            return;\r\n        }\r\n\r\n        const id = Date.now();\r\n        const uid = user.uid;\r\n        const todoObj = {\r\n            id: id,\r\n            text: e.target[0].value,\r\n            uid: uid,\r\n            checked: false,\r\n            dataId: \"\"\r\n        }\r\n        db.doc(`todos/${uid}${id}`).set(todoObj);\r\n\r\n        e.target[0].value = null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit}>\r\n                <Input type=\"text\" placeholder=\"할 일을 입력하세요\" />\r\n                <Button>+</Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SetTodo);","import styled from 'styled-components';\n\nconst Form = styled.form`\n    display : flex;\n    margin-bottom : 16px;\n`;\n\nconst Input = styled.input`\n    width : 100%;\n    height : 50px;\n    padding : 16px 0 16px 16px;\n    border : 1px solid rgba(186, 190, 204, 0.5);\n    background-color : #f2f3f7;\n    border-radius : 10px;\n    outline : none;\n    font-family : GmarketSansLight;\n    font-size : 16px;\n\n    ::placeholder-shwon {\n        text-overflow: ellipsis;\n    }\n`;\n\nconst SetTodoNull = () => {\n    return (\n        <>\n            <Form onSubmit={e => e.preventDefault()}>\n                <Input type=\"text\" placeholder=\"드래그 해서 순서를 변경하세요\" readOnly />\n            </Form>\n        </>\n    )\n}\n\nexport default SetTodoNull;","import React, { useState, useEffect } from \"react\";\r\nimport { db } from '../modules/firebase';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from 'react-icons/md';\r\nimport { BiEditAlt, BiTrash } from \"react-icons/bi\";\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.li`\r\n    width : 100%;\r\n    display : flex;\r\n    justify-content : space-between;\r\n    border-radius : 16px;\r\n    padding : 16px;\r\n    margin : 32px 0;\r\n    background-color : #f2f3f7;\r\n    box-shadow : -6px -6px 8px rgba(255, 255, 255, 0.9), 5px 5px 8px rgba(0, 0, 0, 0.07);\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n    width: calc(100% - 32px);\r\n    display : flex;\r\n    align-items : center;\r\n    & svg {\r\n        min-width : 20px;\r\n        height : 20px;\r\n        margin-right : 10px;\r\n    }\r\n`;\r\n\r\nconst Text = styled.span`\r\n    &.overflow {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n    &.checked {\r\n        color: #abb5bd;\r\n        text-decoration: line-through;\r\n        transition : all 0.25s linear;\r\n    }\r\n`;\r\n\r\nconst Icons = styled.div`\r\n    min-width : 32px;\r\n    display : flex;\r\n    align-items : center;\r\n`;\r\n\r\nconst Todos = ({ user }) => {\r\n    const [todos, setTodos] = useState([]);\r\n    const uid = user ? String(user.uid) : null;\r\n\r\n    useEffect(() => {\r\n        db.collection(\"todos\").where(\"uid\", \"==\", uid).orderBy(\"dataId\").onSnapshot(snapshot => {\r\n            const data = snapshot.docs.map(doc => ({\r\n                ...doc.data()\r\n            }))\r\n            setTodos(data)\r\n        })\r\n        return () => setTodos(false);\r\n    }, [uid]);\r\n\r\n    const updateTodo = (uid, id, text) => {\r\n        const updatedText = prompt(\"메시지를 수정해주세요\", text);\r\n        if (updatedText) db.doc(`todos/${uid}${id}`).update({ text: updatedText });\r\n    }\r\n\r\n    const deleteTodo = (uid, id) => {\r\n        const ok = window.confirm(\"메시지를 삭제할까요?\");\r\n        if (ok) db.doc(`todos/${uid}${id}`).delete();\r\n    }\r\n\r\n    const toggle = (uid, id, checked) => {\r\n        checked ?\r\n            db.doc(`todos/${uid}${id}`).update({ checked: false }) :\r\n            db.doc(`todos/${uid}${id}`).update({ checked: true });\r\n\r\n        checked ?\r\n            document.getElementById(id).classList.remove('checked') :\r\n            document.getElementById(id).classList.add('checked');\r\n    }\r\n\r\n    const overflow = id => {\r\n        const contains = document.getElementById(`${id}`).classList.contains(\"overflow\");\r\n\r\n        if (contains === true) {\r\n            document.getElementById(`${id}`).classList.remove(\"overflow\");\r\n        } else {\r\n            document.getElementById(`${id}`).classList.add(\"overflow\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {todos.map(todo =>\r\n                <List key={todo.id}>\r\n                    <TextContainer>\r\n                        {todo.checked ?\r\n                            <MdCheckBox\r\n                                onClick={() => toggle(todo.uid, todo.id, todo.checked)}\r\n                                style={{ color: 'rgba(6, 124, 248, 0.7)' }}\r\n                            /> :\r\n                            <MdCheckBoxOutlineBlank\r\n                                onClick={() => toggle(todo.uid, todo.id, todo.checked)}\r\n                            />\r\n                        }\r\n                        {todo.checked ?\r\n                            <Text\r\n                                id={todo.id}\r\n                                className=\"checked overflow\"\r\n                                onClick={() => overflow(todo.id)}\r\n                            >\r\n                                {todo.text}\r\n                            </Text> :\r\n                            <Text\r\n                                id={todo.id}\r\n                                className=\"overflow\"\r\n                                onClick={() => overflow(todo.id)}\r\n                            >\r\n                                {todo.text}\r\n                            </Text>\r\n                        }\r\n                    </TextContainer>\r\n                    <Icons>\r\n                        <BiEditAlt onClick={() => updateTodo(todo.uid, todo.id, todo.text)} />\r\n                        <BiTrash onClick={() => deleteTodo(todo.uid, todo.id)} />\r\n                    </Icons>\r\n                </List>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default React.memo(Todos);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EditTodos from './EditTodos';\r\nimport SetTodo from './SetTodo';\r\nimport SetTodoNull from './SetTodoNull';\r\nimport Todos from './Todos';\r\n\r\nconst Main = styled.main`\r\n    width : calc(100% - 32px);\r\n    margin : 24px auto;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display : flex;\r\n    justify-content : flex-end;\r\n    align-items : center;\r\n    position : sticky;\r\n    top : 0;\r\n\r\n    p {\r\n        font-size : 12px;\r\n        color : rgba(0,0,0,0.5);\r\n        margin-right : 10px;\r\n    }\r\n`;\r\n\r\nconst EditButton = styled.label`\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 60px;\r\n    height: 30px;\r\n\r\n    & input {\r\n        width: 0;\r\n        height: 0;\r\n    }\r\n\r\n    .slider {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: #ccc;\r\n        -webkit-transition: 0.4s;\r\n        transition: 0.4s;\r\n    }\r\n\r\n    .slider:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 26px;\r\n        width: 26px;\r\n        left: 4px;\r\n        bottom: 2px;\r\n        background-color: white;\r\n        -webkit-transition: 0.4s;\r\n        transition: 0.4s;\r\n    }\r\n\r\n    input:checked + .slider {\r\n        background-color: #067CF8;\r\n    }\r\n\r\n    input:focus + .slider {\r\n        box-shadow: 0 0 1px #067CF8;\r\n    }\r\n\r\n    input:checked + .slider:before {\r\n        -webkit-transform: translateX(26px);\r\n        -ms-transform: translateX(26px);\r\n        transform: translateX(26px);\r\n    }\r\n\r\n    .slider.round {\r\n        border-radius: 34px;\r\n    }\r\n\r\n    .slider.round:before {\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nconst TodosContainer = ({ user }) => {\r\n    const [alignTodos, setAlignTodos] = React.useState(false);\r\n\r\n    const toggleAlignTodos = () => setAlignTodos((prev => !prev));\r\n\r\n    return (\r\n        <Main>\r\n            {\r\n                user ? (\r\n                    <>\r\n                        {alignTodos ? <SetTodoNull /> : <SetTodo user={user} />}\r\n\r\n                        <ButtonContainer>\r\n                            <p>순서 변경</p>\r\n                            <EditButton>\r\n                                <input type=\"checkbox\" onClick={toggleAlignTodos} />\r\n                                <span className=\"slider round\"></span>\r\n                            </EditButton>\r\n                        </ButtonContainer>\r\n\r\n                        {alignTodos ? <EditTodos user={user} /> : <Todos user={user} />}\r\n                    </>\r\n                ) : (\r\n                    null\r\n                )\r\n            }\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default React.memo(TodosContainer);","import { useState, useEffect } from 'react';\r\nimport { auth } from './modules/firebase';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from './styled/Globalstyle';\r\nimport Navigator from './Components/Navigator';\r\nimport TodosContainer from './Components/TodosContainer';\r\n\r\nconst Title = styled.h1`\r\n    text-align : center;\r\n    color : #067CF8;\r\n    font-size : 40px;\r\n    font-family : GmarketSansBold;\r\n`;\r\n\r\nconst Container = styled.section`\r\n    width : 100%;\r\n    max-width : 480px;\r\n    min-width : 320px;\r\n    margin : 32px auto;\r\n    background-color : #f2f3f7;\r\n    box-shadow: -2px -2px 4px 0px #ffffff, 50px 50px 50px 0px rgb(0 0 0 / 25%);\r\n    border-radius: 25px;\r\n    padding: 25px;\r\n`;\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState({});\r\n    const [init, setInint] = useState(false);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                setUser({\r\n                    email: user.email,\r\n                    uid: user.uid\r\n                })\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            setInint(true);\r\n        })\r\n    }, []);\r\n\r\n    const logOut = () => {\r\n        auth.signOut();\r\n        setUser(null);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyle />\r\n            <Container>\r\n                <Title>To Do List</Title>\r\n                {\r\n                    init ? (\r\n                        <>\r\n                            <Navigator user={user} logOut={logOut} />\r\n                            <TodosContainer user={user} />\r\n                        </>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )\r\n                }\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}